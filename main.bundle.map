{"version":3,"sources":["webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/polyfills.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 400;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 400\n// module chunks = 0","import './polyfills.ts';\n\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/app.module';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component } from '@angular/core';\nimport {AppService} from './app.service';\nimport {Observable} from \"rxjs/Rx\";\nconst async = require('async-es');\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  providers: [AppService]\n})\nexport class AppComponent {\n  public title : string;\n  public commands : Array<Object> = [];\n  public command : string;\n\n  private testCases = [\n    {\n      dimension: 4,\n      operations: 5,\n      init: '/create-cube 4',\n      commands: [\n        '/update-cube -cubeid- 2 2 2 4',\n        '/query-cube -cubeid- 1 1 1 3 3 3',\n        '/update-cube -cubeid- 1 1 1 23',\n        '/query-cube -cubeid- 2 2 2 4 4 4',\n        '/query-cube -cubeid- 1 1 1 3 3 3'\n      ]\n    },\n      {\n      dimension: 2,\n      operations: 4,\n      init: '/create-cube 2',\n      commands: [\n        '/update-cube -cubeid- 2 2 2 1',\n        '/query-cube -cubeid- 1 1 1 1 1 1',\n        '/query-cube -cubeid- 2 2 2 2 2 2',\n        '/query-cube -cubeid- 2 2 2 2 2 2'\n      ]\n    }\n  ]\n\n  constructor (private appService: AppService) {\n    this.title = 'Cube cli v1'\n    this.command = ''\n\n    this.commands.push({\n        id: 0,\n        action: 'help',\n        params: [],\n        command: `\n\n          Welcome to the Cube-Cli... \\n\n\n          This is a simple command line tool intended to run test cases to the Cube API.\n\n          ### Commands:\n            * /create-cube [dimension]\n            * /update-cube [cube-id] [x y z value]\n            * /query-cube [cube-id] [x1 y1 z1 x2 y2 z2]\n            * /list-cubes\n            * /run-test-cases [1,2]\n\n        `\n    })\n  }\n\n\n  clicked(event) : void {\n    if (!this.command.length) return;\n\n\n    let expression = this.createCommand(this.command);\n\n    this.command = ''\n\n    console.log(expression);\n\n    if (expression.action === 'runTestCases') {\n      this.runTestCases(expression);\n    } else {\n      this.runCommand(expression)\n        .then((resp) => this.serverCommand(expression, resp))\n        .catch((err) => console.log(err))\n    }\n  }\n\n  createCommand(command)  {\n    return Object.assign(this.parseCommand(command), {\n      id: 1,\n      command: command,\n      date: new Date(),\n      isClient: true\n    });\n  }\n\n  parseCommand(command) {\n\n    let params = command.split(\" \").filter((a) => a.length);\n\n    let options = {\n      '/create-cube': 'createCube',\n      '/update-cube': 'updateCube',\n      '/query-cube': 'queryCube',\n      '/list-cubes': 'getCubes',\n      '/run-test-cases' : 'runTestCases'\n    };\n\n\n    if (options.hasOwnProperty(params[0])) {\n      return {\n          action: options[params[0]],\n          params: params.slice(1, params.length)\n        }\n    }\n\n\n    return {action: 'not-available', params: []};\n  }\n\n  runCommand(command) {\n\n    console.log(command);\n\n    this.commands.push(command);\n\n    if (!command) return Promise.reject('command not available on cli');\n\n    if(!this.appService[command.action]) return Promise.reject('command not available on service');\n\n    return this.appService[command.action](command.params);\n  }\n\n\n  serverCommand(command, payload) {\n\n    let options = {\n      'createCube': (data) => `Cube created with ID: ${data._id}`,\n      'updateCube': (data) => `Cube with ID: ${data._id} at position(${data.position}) updated with value ${data.value}`,\n      'queryCube': (data) => `Cube with ID: ${data._id} at position(${data.position}) has value ${data.value}`,\n      'getCubes': (data) => `there are ${data.length} cubes`,\n      'runTestCases': (data) => 'Running test cases'\n    };\n\n    let errors = {\n      'updateCube': (data) => `Could not find cube with ID: ${data._id}`,\n      'queryCube': (data) => `Could not find cube with ID: ${data._id}`\n    }\n\n    this.commands.push({\n      id: 1,\n      command: command,\n      date: new Date(),\n      isServer: true,\n      payload: payload.err ? payload.err : options[command.action](payload.data)\n    });\n\n  }\n\n\n  renderCommand(message) {\n    if (message.isServer) {\n      return `$ server:  ${message.payload}`;\n    }\n\n    if(message.isClient) {\n      return `$ me:  ${message.command}`;\n    }\n\n    return `$ system: ${message.command}`;\n  }\n\n\n  runTestCases(expression) {\n\n    console.log('should run test cases', expression);\n\n    let test = parseInt(expression.params[0]);\n\n    if(test > 2) return;\n\n    this.serverCommand(expression, {err: null, data: {}});\n\n\n    this.runTestCommand(this.testCases[test - 1]);\n\n  }\n\n  runTestCommand(set) {\n    let expression = this.createCommand(set.init);\n\n    this.runCommand(expression)\n    .then((resp) => {\n\n      this.serverCommand(expression, resp);\n\n      let commands = set.commands.map((command => command.replace('-cubeid-', resp.data._id)));\n\n\n      async.mapSeries(commands, (command, next) => {\n        let expression = this.createCommand(command);\n        this.runCommand(expression)\n            .then(resp => [this.serverCommand(expression, resp), resp])\n            .then((resp) => next(null, resp))\n            .catch((err) => next(err));\n      }, (err, res) => {\n        console.log(err, res);\n      });\n    })\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import  {Injectable} from '@angular/core';\nimport {Http, Headers, RequestOptions, Response} from '@angular/http';\n\nimport { Observable } from 'rxjs/Rx';\n\n// Import RxJs required methods\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/toPromise';\n\n@Injectable()\nexport class AppService {\n\n  private base = 'https://cube-summation-back.herokuapp.com/api/cube';\n\n  constructor(private http: Http) {};\n\n  createCube(params) {\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n    return this.http.post(this.base, params, options)\n    .toPromise()\n    .then((resp) => resp.json())\n    .catch((err) => console.log(err));\n  }\n\n  getCubes(params) {\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n    return this.http.get(this.base, options)\n    .toPromise()\n    .then((resp) => resp.json())\n    .catch((err) => console.log(err) );\n  }\n\n  updateCube(params) {\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n    return this.http.post(\n      [this.base, params[0], 'update'].join('/'),\n      {\n        position: params.slice(1, params.length - 1),\n        value: params.slice(4, params.length)\n      },\n      options)\n    .toPromise()\n    .then((resp) => resp.json())\n    .catch((err) => console.log(err) );\n  }\n\n\n  queryCube(params) {\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n    return this.http.post(\n      [this.base, params[0], 'query'].join('/'),\n      {\n        position: params.slice(1, params.length),\n      },\n      options)\n    .toPromise()\n    .then((resp) => resp.json())\n    .catch((err) => console.log(err) );\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ung build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","// This file includes polyfills needed by Angular 2 and is loaded before\n// the app. You can add your own extra polyfills to this file.\n\nimport 'core-js/es6/symbol';\nimport 'core-js/es6/object';\nimport 'core-js/es6/function';\nimport 'core-js/es6/parse-int';\nimport 'core-js/es6/parse-float';\nimport 'core-js/es6/number';\nimport 'core-js/es6/math';\nimport 'core-js/es6/string';\nimport 'core-js/es6/date';\nimport 'core-js/es6/array';\nimport 'core-js/es6/regexp';\nimport 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport 'core-js/es6/reflect';\n\nimport 'core-js/es7/reflect';\nimport 'zone.js/dist/zone';\n\n\n\n// WEBPACK FOOTER //\n// ./src/polyfills.ts","module.exports = \".cli {\\n  padding: 20px;\\n}\\n\\n.command-list {\\n  width: 85%;\\n}\\n\\n.command {\\n  margin-top: 10px;\\n  min-height: 25px;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 746\n// module chunks = 0","module.exports = \"<div class=\\\"container\\\">\\n  <section class=\\\"hero is-fullheight cli\\\">\\n    <div class=\\\"hero-title\\\">\\n      <h1 class=\\\"title\\\">\\n        {{title}}\\n      </h1>\\n    </div>\\n    <div class=\\\"hero-body\\\">\\n\\n      <ul class=\\\"command-list\\\">\\n        <li class=\\\"command\\\" *ngFor=\\\"let item of commands\\\">\\n          <pre>{{renderCommand(item)}}</pre>\\n        </li>\\n      </ul>\\n    </div>\\n\\n    <div class=\\\"hero-foot\\\">\\n\\n      <div class=\\\"field is-grouped\\\">\\n        <p class=\\\"control is-expanded\\\">\\n          <input [(ngModel)]='command' class=\\\"input\\\" type=\\\"text\\\" placeholder=\\\"Type a command..\\\">\\n        </p>\\n        <p class=\\\"control\\\">\\n          <a class=\\\"button is-info\\\" (click)=\\\"clicked()\\\">\\n          Send command\\n        </a>\\n        </p>\\n      </div>\\n\\n    </div>\\n  </section>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 747\n// module chunks = 0"],"sourceRoot":""}